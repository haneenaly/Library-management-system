<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAABABJREFUWEfN
        l1lIVFEYxw0ifCqmXChNpckFbcgkLZtR1GbJlXEaBsultMWl1FYysUJfSisjEaVNUCysqAcptHqxh0ot
        UShoQdCoRoqiCKKHgq/zP82xmXHUe3WKLvw91+v1/H/nfN/5zrkehj1pXOzyZFIyqdysMCZP4eOs3z+Y
        sWKhd6tvoPIdtEjhZVUvD7eKFtKtWCVfqqixZT6LX7H+o52NhXB5wnxlbAIlWPJpTaqZEiOiqM60lRJD
        VdS4qYgubimj9uKD1LGrQpaulh4mc4zmG/NQuzKHcCkx6jhTDmmzCycFQIfXyyrpGutUimCO96UAqKQA
        XNpeLkuYMbcANGeXUOn6dNJEryaTIV2SDJpEytfo5AHAGOK5EB7pAIDOjlWfoqFnYzT41MpbV8LfoLYr
        t8msTpIOgGwPiYwhsyWXUjIsE2YAACfqmun5q0/UfL6D3588fc5BeHbmbAv1D4zQzc778gHQ8fDIV7rd
        3UsZa+KnBHA2F5oxgM6Qae0dGOMAt7of/XsAoynv/wdAEookm06yk3A6AIdlqE+bVrKX4VQAMy1EonK6
        DUBqKcY7qII1G/P4zKEPxfy5tcwnmmnCrigLAPV9KsEcxkZNMBVt8qemmmC60RRBLXVhVJ4f8CU02L8b
        IH8FAOZVaVm0UetHd1pV9KEvhr6/SCAa1XL9GF5PfTejKF3rPcI89W4FgHk920cwcph8fKLmGu6J5cZC
        AMGzpHULnzFfpQNA/+B7vs6xhmcyA1nqWD7VGDlMKksCuN4+iKHPQ/EOEAgL8mIcAJXwwKHjfB9w3oym
        A0DiIesx+hd3ozhA5wUV+XrN4+Eozgni+YBnAgLvJK5VPGbeCg4gNiPshpFJqZMeSFwBiOkvMAby0aJz
        jBgJWLNvGb8HGCAQHgAgNwosS8aYN86LvwGknIikAsAARsgDMe0ID4T7CQBSj2STASAEmG4RAhFzmEG4
        x2wg9vgdYLYQ+MgCQLydAfAMf0MSwgAAMMAoEXeMWiQkwACAZeqQhAIAp2KeA8wYaxotQBqydjqUWVcS
        NcB+FgQAWmEOOHOyzxv4OgAgCbECIGw8KfE63mYkJXPxjWayzcj2HO8j60UtsA8DhOWJ2M+Z45EN83EA
        JGHZ3mrqujfI93N74dnlji7J2l1WwUEw5Rg5YKD6IyE/bXHPFObjAJo4vbXn4Wt+sEQ1tBc6LSzeR0Ul
        +yUra/M2fr40ZRopaOmCl4g3Rs28fOzNBYBSv8E0CgAcJlAN29o7qepoLT+EoJ2J8L8Ax1eXs6m9cPFP
        MxypACHKcUNj66yFY5xtB5T2cYqZMFu2WnNyd7hNfn4BQ+jf2Vjozw2jxItMrj6xZ6MpPs/TPH4BPqfW
        54PoJewAAAAASUVORK5CYII=
</value>
  </data>
</root>